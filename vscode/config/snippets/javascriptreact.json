{
/*
	// Place your snippets for JavaScript React here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"React Function": {
		"prefix": "rfun",
		"body": [
			"import React, { memo } from 'react'",
			"",
			"function ${1}({ ${2:args} }) {",
			"\treturn (",
			"\t\t$3",
			"\t)",
			"}",
			"",
			"export default memo($1)"
		],
		"description": "Create a react functional component"
	},
	"React Component": {
		"prefix": "rcmp",
		"body": [
			"import React, { PureComponent } from 'react'",
			"",
			"export default class ${1:Name} extends PureComponent {",
			"\trender(){",
			"\t\treturn $0",
			"\t}",
			"}"
		],
		"description": "Create a react component"
	},
	"React componentDidMount": {
		"prefix": "cdm",
		"body" : [
			"componentDidMount = () => {",
			"\t$0",
			"}"
		]
	},
	"React componentDidUpdate": {
		"prefix": "cdu",
		"body" : [
			"componentDidUpdate = (prevProps, prevState) => {",
			"\t$0",
			"}",
		],
	},
	"React componentDidCatch": {
		"prefix": "cdc",
		"body" : [
			"componentDidCatch = (error, info) => {",
			"\t$0",
			"}",
		]
	},
	"React setState": {
		"prefix": "setstate",
		"body": [
			"this.setState( (state, props) => {",
			"\t$0",
			"})",
		],
	},
	"React scss module": {
		"prefix": "import style from './style.module.scss",
		"body": [
			"import style from './style.module.scss'"
		],
	}
}
